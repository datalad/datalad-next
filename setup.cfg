[metadata]
url = https://github.com/datalad/datalad-extension-template
author = The DataLad Team and Contributors
author_email = team@datalad.org
description = What is next in DataLad
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
license = MIT
classifiers =
    Programming Language :: Python
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3

[options]
python_requires = >= 3.6
install_requires =
    datalad >= 0.15.6
    datalad-mihextras
packages = find:
include_package_data = True

[options.extras_require]
# this matches the name used by -core and what is expected by some CI setups
devel =
    nose
    coverage

[options.packages.find]
# do not ship the build helpers
exclude=
    _datalad_buildsupport

[options.entry_points]
# 'datalad.extensions' is THE entrypoint inspected by the datalad API builders
datalad.extensions =
    # the label in front of '=' is the command suite label
    # the entrypoint can point to any symbol of any name, as long it is
    # valid datalad interface specification (see demo in this extensions)
    next = datalad_next:command_suite

[versioneer]
# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
VCS = git
style = pep440
versionfile_source = datalad_next/_version.py
versionfile_build = datalad_next/_version.py
tag_prefix =
parentdir_prefix =

[coverage:report]
show_missing = True
omit =
    # versioneer code
    datalad_next/_version.py
